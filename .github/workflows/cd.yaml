name: CD

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
  pull_request:
    paths-ignore:
      - 'docs/**'

# MVD runs using docker compose based setup with no dependency on cloud services.

jobs:

  VerifyLocalTests:
    permissions:
      checks: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/gradle-setup

      # Use EDC FileSystem vault for CI run.
      - name: 'Build launcher'
        run: ./gradlew -DuseFsVault="true" :launchers:connector:shadowJar

      # Build Registration Service runtime JAR locally.
      - name: 'Build Registration Service launcher'
        run: ./gradlew -DuseFsVault="true" :launchers:registrationservice:shadowJar

      # Download the CLI's into the test directory
      - name: 'Copy Registration Service and IdentityHub CLI'
        run: ./gradlew getJarsForLocalTest getJarsForAzureTest

      - name: 'Upgrade docker compose (for --wait option)'
        run: |
          sudo curl -L https://github.com/docker/compose/releases/download/v2.6.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: 'Run MVD docker compose (incl. MVD UI)'
        run: docker compose --profile ui -f system-tests/docker-compose.yml up --build --wait
        timeout-minutes: 10
        env:
          REGISTRATION_SERVICE_LAUNCHER_PATH: ./launchers/registrationservice
          MVD_UI_PATH: DataDashboard

      - name: 'Unit and system tests'
        run: ./gradlew test -DincludeTags="ComponentTest,EndToEndTest"
        timeout-minutes: 10
        env:
          JACOCO: "true"
          TEST_ENVIRONMENT: "local"

      - name: 'docker compose logs'
        run: docker compose -f system-tests/docker-compose.yml logs
        if: always()
        env:
          REGISTRATION_SERVICE_LAUNCHER_PATH: ./launchers/registrationservice
          MVD_UI_PATH: DataDashboard

      - name: "Publish Gatling report"
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Gatling reports (local run)
          path: '**/build/reports/gatling/**'

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: "**/test-results/**/*.xml"

      - name: CodeCov
        uses: codecov/codecov-action@v3
